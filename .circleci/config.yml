version: 2
jobs:
  build:
    docker: 
      - image: python:3.8-buster
    working_directory: ~/back
    steps: 
      - checkout
      - restore_cache:
          deps-{{ checksum "requirements/dev.txt"}}-{{ .Environment.CACHE_VERSION }}
      - run: 
          name: set env vars
          command: | 
            export CONDUIT_SECRET='I<3Cookies'
            export FLASK_APP=./autoapp.py
            export FLASK_DEBUG=1
      - run :
          name: install deps
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
      - save_cache:
          key: deps-{{ checksum "requirements/dev.txt"}}-{{ .Environment.CACHE_VERSION }}
          paths:
            - "venv"
  test:
    docker: 
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: myUsr
          POSTGRES_DB: psdb
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    steps:
      - checkout
      - restore_cache:
          key: deps-{{ checksum "requirements/dev.txt"}}-{{ .Environment.CACHE_VERSION }}
          - run: 
              name: postgres
              command : dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name : test
          command: |
            . venv/bin/activate
            flask db upgrade
            flask test
workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test:
          context:
            - back_final
          requires:
            - build